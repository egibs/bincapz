# Sourced and adapted from https://github.com/goreleaser/goreleaser-example-zig-cgo/blob/master/.goreleaser.yaml
project_name: bincapz

before:
  hooks:
    - go mod tidy
builds:
  - id: bincapz-macos-build
    goos:
    - darwin
    goarch:
    - amd64
    - arm64
    ldflags:
    - -s -w
    - -X main.BuildVersion={{.Env.VERSION}}
    flags:
    - -trimpath
    - -buildmode=pie
    env:
    - CGO_ENABLED=1
    - >-
        {{- if eq .Os "darwin" }}
          {{- if eq .Arch "amd64"}}CC=zig c -target x86_64-macos-none -F{{ .Env.SDK_PATH }}/System/Library/Frameworks{{- end }}
          {{- if eq .Arch "arm64"}}CC=zig c -target aarch64-macos-none -F{{ .Env.SDK_PATH }}/System/Library/Frameworks{{- end }}
        {{- end }}
    - >-
        {{- if eq .Os "darwin" }}
          {{- if eq .Arch "amd64"}}CC=zig c++ -target x86_64-macos-none -F{{ .Env.SDK_PATH }}/System/Library/Frameworks{{- end }}
          {{- if eq .Arch "arm64"}}CC=zig c++ -target aarch64-macos-none -F{{ .Env.SDK_PATH }}/System/Library/Frameworks{{- end }}
        {{- end }}
  
  - id: bincapz-linux-build
    goos:
    - linux
    goarch:
    - amd64
    - arm64
    ldflags:
    - -s -w
    - -X main.BuildVersion={{.Env.VERSION}}
    flags:
    - -trimpath
    env:
    - CGO_ENABLED=1
    - >-
        {{- if eq .Os "linux" }}
          {{- if eq .Arch "amd64" }}CC=zig c -target x86_64-linux-musl{{- end }}
          {{- if eq .Arch "arm64"}}CC=zig c -target aarch64-linux-musl{{- end }}
        {{- end }}
    - >-
        {{- if eq .Os "linux" }}
          {{- if eq .Arch "amd64" }}CC=zig c++ -target x86_64-linux-musl{{- end }}
          {{- if eq .Arch "arm64"}}CC=zig c++ -target aarch64-linux-musl{{- end }}
        {{- end }}

  - id: bincapz-windows-build
    goos:
    - windows
    goarch:
    - amd64
    - arm64
    ldflags:
    - -s -w
    - -X main.BuildVersion={{.Env.VERSION}}
    flags:
    - -trimpath
    env:
    - CGO_ENABLED=1
    - >-
        {{- if eq .Os "windows" }}
          {{- if eq .Arch "amd64" }}CC=zig c -target x86_64-windows-gnu{{- end }}
          {{- if eq .Arch "arm64"}}CC=zig c -target aarch64-windows-gnu{{- end }}
        {{- end }}
    - >-
        {{- if eq .Os "windows" }}
          {{- if eq .Arch "amd64" }}CC=zig c++ -target x86_64-windows-gnu{{- end }}
          {{- if eq .Arch "arm64"}}CC=zig c++ -target aarch64-windows-gnu{{- end }}
        {{- end }}

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
    - goos: windows
      format: zip
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
